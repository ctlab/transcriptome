<project xmlns:ivy="antlib:org.apache.ivy.ant" name="genome-de-novo" default="first-build" basedir=".">
    <property name="VERSION" value="0.1.1"/>
    <tstamp>
        <format property="TODAY" pattern="dd-MMM-yyyy" locale="en"/>
    </tstamp>

    <property name="lib.dir" value="lib"/>
    <property name="ant.build.javac.source" value="1.6"/>
    <property name="ant.build.javac.target" value="1.6"/>

    <condition property="dist.version.suffix" value="-b${build.number}" else="">
        <isset property="build.number"/>
    </condition>

    <property name="dist.version" value="${VERSION} (build ${build.number}, ${TODAY})"/>
    <echo message="${dist.version}" file="VERSION"/>
    <echo message="Version: ${dist.version}"/>

    <property name="dist.base.name" value="dist/itmo-assembler${dist.version.suffix}"/>

    <property name="dist.jar.name" value="${dist.base.name}.jar"/>
<!--    <property name="dist.sh.name" value="${dist.base.name}.sh"/> -->
    <property name="dist.bat.name" value="${dist.base.name}.bat"/>
<!--    <property name="dist.gui.name" value="${dist.base.name}-gui.jar"/>
    <property name="dist.gui.sh.name" value="${dist.base.name}-gui.sh"/>
    <property name="dist.gui.bat.name" value="${dist.base.name}-gui.bat"/> -->

    <path id="class.path">
        <fileset dir="lib/dev">
            <include name="**/*.jar" />
        </fileset>
    </path>
    <target name="first-build" depends="ivy.bootstrap,resolve,compile"/>

    <target name="compile">
        <mkdir dir="bin"/>
        <mkdir dir="bin/java"/>
        <javac srcdir="src/java" destdir="bin/java" debug="on">
            <classpath refid="class.path"/>
            <compilerarg value="-Xlint"/>
        </javac>
    </target>

    <target name="clean">
        <delete failonerror="false">
            <fileset dir="bin/java"/>
            <fileset dir="bin/hadoop"/>
            <fileset dir="bin/dependencies"/>
        </delete>
    </target>

    <target name="hadoop" depends="compile">
        <mkdir dir="bin/hadoop"/>
        <javac srcdir="src/java" includes="ru/ifmo/genetics/distributed/**" destdir="bin/hadoop" debug="on">
            <classpath refid="class.path"/>
            <compilerarg value="-Xlint"/>
        </javac>
        <copy file="config.properties" tofile="bin/java/config.properties"/>
        <jar basedir="bin/java" destfile="bin/hadoop_task.jar"/>
    </target>

    <target name="resolve" description="--> retrieve dependencies with ivy">
        <taskdef resource="org/apache/ivy/ant/antlib.xml" uri="antlib:org.apache.ivy.ant" classpath="${ivy.home}/${ivy.jar.name}"/>
        <ivy:retrieve sync="true" pattern="${lib.dir}/[conf]/[artifact]-[revision](-[classifier]).[ext]" symlink="true"/>
    </target>

    <target name="clean-libs" description="--> clean libs">
        <echo message="Deleting lib dir" />
        <delete dir="${lib.dir}" />  
    </target>

    <target name="report">
        <mkdir dir="report" />
        <ivy:resolve type="${ivy.resolve.types}"/>
        <ivy:report todir="report" />
    </target>

  <property name="ivy.jar.version" value="2.3.0"/>
  <property name="ivy.jar.name" value="ivy-${ivy.jar.version}.jar"/>
  <property name="ivy.home" value="${user.home}/.ivy2"/>
  <available property="ivy.installed" file="${ivy.home}/${ivy.jar.name}"/>

 
  <target name="ivy.install" unless="ivy.installed">
    <mkdir dir="${ivy.home}"/>
    <get src="http://repo1.maven.org/maven2/org/apache/ivy/ivy/${ivy.jar.version}/${ivy.jar.name}" dest="${ivy.home}/${ivy.jar.name}"/>
  </target>
 

  <target name="ivy.bootstrap" depends="ivy.install" unless="ivy.bootstrapped">
    <taskdef resource="org/apache/ivy/ant/antlib.xml" uri="antlib:org.apache.ivy.ant" classpath="${ivy.home}/${ivy.jar.name}"/>
    <property name="ivy.bootstrapped" value="true"/> <!-- Avoid re-bootstrapping because it causes classloader issues. -->
  </target>

  
  <target name="compile-tests" depends="compile">
      <mkdir dir="bin"/>
      <mkdir dir="bin/java-test"/>
      <javac srcdir="test/java" destdir="bin/java-test" debug="on">
          <classpath>
              <path refid="class.path"/>
              <pathelement path="bin/java"/>
          </classpath>
          <compilerarg value="-Xlint"/>
      </javac>
  </target>

  <target name="test" depends="compile-tests">
      <mkdir dir="test-report" />
      <junit printsummary="yes" haltonfailure="no">
          <classpath>
              <pathelement path="bin/java-test/"/>
              <pathelement path="bin/java/"/>
              <path refid="class.path"/>
          </classpath>
          <formatter type="xml"/>
          <batchtest fork="yes" todir="./test-report">
              <fileset dir="./test/java">
                  <include name="**/*Test.java"/>
              </fileset>
          </batchtest>
      </junit>
  </target>

  <target name="package-prepare" depends="clean,resolve,compile">
      <mkdir dir="bin/dependencies"/>
      <unjar dest="bin/dependencies">
          <fileset dir="lib/standalone" includes="**/*.jar"/>
      </unjar>
  </target>

  <target name="package-build">
      <mkdir dir="dist"/>


      <jar destfile="${dist.jar.name}" duplicate="preserve">
          <fileset dir="bin/java"/>
          <fileset file="log4j.properties"/>
          <fileset file="COPYING"/>
          <fileset file="VERSION"/>
          <fileset dir="bin/dependencies"/>
          <manifest>
              <attribute name="Main-Class"
                  value="ru.ifmo.genetics.Runner"/>
          </manifest>
      </jar>
<!--
      <concat destfile="${dist.sh.name}" binary="true">
          <filelist files="stub.sh,${dist.jar.name}"/>
      </concat> 
      <chmod file="${dist.sh.name}" perm="a+x"/>
-->
      <concat destfile="${dist.bat.name}" binary="true">
          <filelist files="stub.bat,${dist.jar.name}"/>
      </concat>


<!--      <jar destfile="${dist.gui.name}" duplicate="preserve">
          <fileset dir="bin/java"/>
          <fileset file="COPYING"/>
          <manifest>
              <attribute name="Main-Class"
                  value="ru.ifmo.genetics.GUI"/>
          </manifest>
      </jar> -

      <concat destfile="${dist.gui.sh.name}" binary="true">
          <filelist files="stub-gui.sh,${dist.gui.name}"/>
      </concat> 
      <chmod file="${dist.gui.sh.name}" perm="a+x"/>

      <concat destfile="${dist.gui.bat.name}" binary="true">
          <filelist files="stub-gui.bat,${dist.gui.name}"/>
      </concat>-->
  </target>


  <target name="package" depends="package-prepare,package-build">
  </target>

</project>
